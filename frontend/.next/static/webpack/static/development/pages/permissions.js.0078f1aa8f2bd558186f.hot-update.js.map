{"version":3,"file":"static/webpack/static\\development\\pages\\permissions.js.0078f1aa8f2bd558186f.hot-update.js","sources":["webpack:///./components/Permissions.js"],"sourcesContent":["import { Query } from \"react-apollo\";\r\nimport Error from \"./ErrorMessage\";\r\nimport gql from \"graphql-tag\";\r\nimport Table from \"./styles/Table\";\r\nimport SickButton from \"./styles/SickButton\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst possiblePermissions = [\r\n  \"ADMIN\",\r\n  \"USER\",\r\n  \"ITEMCREATE\",\r\n  \"ITEMUPDATE\",\r\n  \"ITEMDELETE\",\r\n  \"PERMISSIONUPDATE\"\r\n];\r\n\r\nconst ALL_USERS_QUERY = gql`\r\n  query {\r\n    users {\r\n      id\r\n      name\r\n      email\r\n      permissions\r\n    }\r\n  }\r\n`;\r\n\r\nconst Permissions = props => (\r\n  <Query query={ALL_USERS_QUERY}>\r\n    {({ data, loading, error }) =>\r\n      console.log(data) || (\r\n        <div>\r\n          <Error error={error} />\r\n          <div>\r\n            <h2>Manage permissions</h2>\r\n            <Table>\r\n              <thead>\r\n                <tr>\r\n                  <th>Name</th>\r\n                  <th>Email</th>\r\n                  {possiblePermissions.map(permission => (\r\n                    <th key={permission}>{permission}</th>\r\n                  ))}\r\n                  <th>â†“</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {data.users.map(user => (\r\n                  <UserPermissions user={user} key={user.id} />\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  </Query>\r\n);\r\n\r\nclass UserPermissions extends React.Component {\r\n  static propTypes = {\r\n    user: PropTypes.shape({\r\n      name: PropTypes.string,\r\n      email: PropTypes.string,\r\n      id: PropTypes.string,\r\n      permissions: PropTypes.array\r\n    }).isRequired\r\n  };\r\n  state = {\r\n    permissions: this.props.user.permissions\r\n  };\r\n  handlePermissionChange = e => {\r\n    const checkbox = e.target;\r\n    // take a copy of the current permissions\r\n    let updatedPermissions = [...this.state.permissions];\r\n    console.log(updatedPermissions);\r\n    //figure out if we need to remove or add the permission\r\n    if (checkbox.checked) {\r\n      updatedPermissions.push(checkbox.value);\r\n    } else {\r\n      updatedPermissions = updatedPermissions.filter(\r\n        permission => permission !== checkbox.value\r\n      );\r\n    }\r\n    this.setState({ permissions: updatedPermissions });\r\n  };\r\n  render() {\r\n    const user = this.props.user;\r\n    return (\r\n      <tr>\r\n        <td>{user.name}</td>\r\n        <td>{user.email}</td>\r\n        {possiblePermissions.map(permission => (\r\n          <td key={permission}>\r\n            <label htmlFor={`${user.id}-permission-${permission}`}>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={this.state.permissions.includes(permission)}\r\n                value={permission}\r\n                onChange={this.handlePermissionChange}\r\n              />\r\n            </label>\r\n          </td>\r\n        ))}\r\n        <td>\r\n          <SickButton>UPDATE</SickButton>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Permissions;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AASA;AACA;AAUA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAlBA;AAFA;AACA;AA+BA;;;;;;;;;;;;;;;;;;AASA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAlDA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AAJA;AADA;AACA;AAmDA;;;;A","sourceRoot":""}